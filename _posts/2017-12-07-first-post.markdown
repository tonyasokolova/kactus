---
title:  "Коротко об HTTP"
date:   2017-12-07 15:20:00
description: 
---

HTTP (HyperText Transfer Protocol, «протокол передачи гипертекста») — это протокол передачи данных, изначально предназанченный для передачи гипертекстовых документов. Согласно модели OSI протокол HTTP является протоколом прикладного уровня (уровня приложения). Основой HTTP является клиент-серверная структура передачи данных:
* Клиент (браузер или клиентское приложение) формирует запрос и отправляет его на сервер;
* Сервер обрабатывает данный запрос, формирует ответ и отправляет обратно клиенту. 
 
В настоящее время протокол HTTP повсюду используется во Всемирной паутине для получения информации с веб-сайтов.
Передача данных по протоколу HTTP, как правило, происходит через TCP/IP-соединение. Сервер по умолчанию использует TCP-порт 80 (хотя может использовать и любой другой).

И так, чтобы лушче разобраться в HTTP протоколе, рассмотрим кратко теорию и на наглядном примере разберем более подробно.

### Структура протокола HTTP
Каждое HTTP-сообщение состоит из стартовой строки, заголовков и тела сообщения (может отсутствовать).

#### *Стартовая строка*
Стартовая строка запроса составляется следующим способом: Метод URI HTTP/Версия

1. Метод -- тип запроса, одно слово заглавными буквами, определяет операцию, которую нужно осуществить с указанным ресурсом. Например, метод POST применяется для передачи пользовательских данных заданному ресурсу. Метод GET используется для запроса содержимого указанного ресурса, также для начала какого-либо процесса;
2. URI (Uniform Resource Identifier, унифицированный идентификатор ресурса) -- определяет путь к запрашиваему конкретному ресурсу (документу);
3. Версия -- определяет, в соответствии с какой версией стандарта HTTP составлен запрос.

*Пример:* {% highlight html %}GET / HTTP/1.1{% endhighlight %} В данном примере стартовая строка показывает, что запрашивается стартовая страница.

Еще один пример:
Например, мы заходим на сайт tonyasokolova.github.io, и мы хотим прочитать о владельце данного сайта. Мы нажимаем на *About*, т.е. мы обращаемся к tonyasokolova.github.io/about, в качестве URI у нас /about. Так как никаких пользовательских данных мы не передаем, то у нас метод GET. Версия HTTP обычно всегда 1.1. Таким образом стартовая строка будет выглядеть так:  


<!--тартовая строка ответа выглядит так: HTTP/Версия КодСостояния Пояснение-->

<!--1. Версия -- как и в запросе;
2. Код состояния (Status Code) --  три цифры. По коду состояния определяется дальнейшее содержимое сообщения и поведение клиента. Например, -->

